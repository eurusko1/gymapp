@page "/torles"
@using Gymapp1.Data
@using DataConnection
@using Microsoft.Extensions.Configuration
@inject IDataAccess _data
@inject IConfiguration _config
@inject TESZT teszt
@inject NavigationManager NavigationManager
@inject Gymapp1.Service.IMailService MailService
@inject IJSRuntime JsRunTime
    <style type="text/css">
        #tblParent tbody tr td {
            width: 200px;
            height: 200px;
        }

        #divParent {
            position: relative;
        }

        #divModal {
            z-index: 10;
            position: absolute;
            background-color: #ffffff;
            left: 40%;
            top: 20%;
            width: 400px;
            min-height: 300px;
        }

        .modalHeading {
            text-align: center;
            font-size: 50px;
            text-decoration: underline;
            margin-bottom: 36px;
        }
    </style>



<EditForm Model="@dayEvent" @onclick="()=> DeleteNote(dayEvent.id)">
    <div id="divModal">
        <h3 style="text-align:center">Foglalas Torlese</h3>
        <div class="container">
            <div class="panel panel-default">
                <div class="panel-body">
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <label>Vezetéknév : </label>
                    </div>
                    <div class="col-md-8">
                        <InputText id="name" @bind-Value="dayEvent.FirstName" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <label>Keresztnév : </label>
                    </div>
                    <div class="col-md-8">
                        <InputText id="Lastname" @bind-Value="dayEvent.LastName" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <label>Foglalas szam : </label>
                    </div>
                    <div class="col-md-8">
                        <InputNumber id="id" @bind-Value="dayEvent.id" />
                        @messege
                    </div>
                </div>
                <div class="row" style="margin-bottom:10px;">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6" style="text-align:right;">
                        <button tyep="submit" class="btn btn-success"  style="float:left;margin-right:5px;">Törlés</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    DayEvent dayEvent = new DayEvent();
    TimeModel selected = new TimeModel();
    public bool Success { get; set; }
    private async Task<Boolean> CheckIfDateIsExist(string firstname, string lastname, int id)
    {
        bool isTaken = false;
        string sql = "SELECT * FROM Foglalt WHERE Firstname='" + firstname + "' AND Lastname='" + lastname + "' AND id ='" + id + "'";
        List<int> results = await _data.LoadData<int, dynamic>(sql, new { }, _config.GetConnectionString("default"));
        if (results.Count > 0)
        {
            isTaken = true;
            return isTaken;

        }
        else
        {
            isTaken = false;
            return isTaken;
        }


    }
    public string messege = "";
    async Task DeleteNote(int id)
    {


        if (await CheckIfDateIsExist(dayEvent.FirstName, dayEvent.LastName, dayEvent.id))
        {
            Success = true;
            teszt.Delete(id);
            messege = "Foglalasat toroltuk";
            ShowAlert();
        }
        
            messege = "Nem létezik ez a foglalás";
        

    }
    public async Task Delete_Click(int id)
    {

        dayEvent.Message = teszt.Delete(id);

    }

    async Task ShowAlert()
    {
        await JsRunTime.InvokeVoidAsync("createAlert");
    }





}

