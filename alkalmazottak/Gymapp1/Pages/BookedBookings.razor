@page "/foglalt"
@using Gymapp1.Data
@using DataConnection
@using Microsoft.Extensions.Configuration
@inject Gymapp1.IService.IDayEventService dayEventService
@inject IDataAccess _data
@inject IConfiguration _config
@inject TESZT teszt
@inject NavigationManager NavigationManager
<h3>Foglalt idopontok</h3>

<AuthorizeView>
    @if (booking is null)
    {
        <p><em>Loadings...</em></p>
    }
    else
    {

        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Note</th>
                    <th>Vezeteknev</th>
                    <th>Keresztnev</th>
                    <th>Datum</th>
                    <th>Idopont</th>
                    <th>Telefonszam</th>
                    <th>Email</th>
                    <th>Erkezes</th>
                    <th>Tavozas</th>
                    <th>Vezerlok</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var book in booking)
                {
                    <tr>
                        <td>@book.id</td>
                        <td>@book.Note</td>
                        <td>@book.LastName</td>
                        <td>@book.FirstName</td>
                        <td>@book.EventDate.ToString("yyyy-MMM-ddd")</td>
                        <td>@book.idopont</td>
                        <td>@book.Tel</td>
                        <td>@book.Email</td>
                        <td>@book.Erkezes.ToString("HH:mm:ss")</td>
                        <td>@book.tavozas.ToString("HH:mm:ss")</td>
                        <td>
                            <button @onclick="()=> Delete_Click(book.id)">Torles</button>
                            <button @onclick="()=> CheckIn(DateTime.Now, book.id)">Erkezes</button>
                            <button @onclick="()=> CheckOut(DateTime.Now, book.id)">Tavozas</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    }
</AuthorizeView>
@code {

    DayEvent dayEvent = new DayEvent();
    private List<DayEvent> booking;
    public bool Success { get; set; }
    protected override async Task OnInitializedAsync()
    {
        if (Success == true)
        {
            string sql = "select * from Foglalt";
            booking = await _data.LoadData<DayEvent, dynamic>(sql, new { }, _config.GetConnectionString("default"));
            StateHasChanged();
        }
        else
        {
            string sql = "select * from Foglalt";
            booking = await _data.LoadData<DayEvent, dynamic>(sql, new { }, _config.GetConnectionString("default"));
            StateHasChanged();
        }

    }

    public async Task Delete_Click(int id)
    {

        dayEvent.Message = teszt.Delete(id);
        booking = booking.Where(c => c.id != id).ToList();
        Success = true;

    }

    async Task CheckIn(DateTime date, int id)
    {
        Success = true;
        teszt.Checkin(date, id);
        string sql = "select * from Foglalt";
        booking = await _data.LoadData<DayEvent, dynamic>(sql, new { }, _config.GetConnectionString("default"));



    }
    async Task CheckOut(DateTime date, int id)
    {

        Success = true;
        teszt.Checkout(date, id);
        string sql = "select * from Foglalt";
        booking = await _data.LoadData<DayEvent, dynamic>(sql, new { }, _config.GetConnectionString("default"));

    }


}
